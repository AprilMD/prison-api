buildscript {

    repositories {
        maven { url "https://repo.spring.io/plugins-release" }
        maven { url "https://plugins.gradle.org/m2" }
        maven { url "https://repository.mulesoft.org/releases" }
    }

    dependencies {
        classpath "org.raml:raml-jaxrs-codegen-core:1.3.4"
        classpath "org.raml.jaxrs:jaxrs-code-generator:2.1.0"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${version_spring_boot}"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1"
        classpath "net.serenity-bdd:serenity-gradle-plugin:1.1.42"
    }
}

subprojects {

    ext {
        resourceGenDir = file("${rootDir}/mobile-api/src/generated/resources")
        sourceGenDir = file("${rootDir}/mobile-api/src/generated/java")
        elite2ApiDir = file("${rootDir}/mobile-api/src/main/java")
    }

    repositories {
        mavenCentral()
        maven { url "${artifactory_url}/libs-release" }
        maven { url "${artifactory_url}/third-party" }
    }

    configurations {
        compile.exclude module: "commons-logging"
        compile.exclude module: "log4j"
        compile.exclude module: "c3p0"
        compile.exclude module: "tomcat-jdbc"
    }

    apply plugin: "java"
    apply plugin: "checkstyle"
    apply plugin: "maven"
    apply plugin: "maven-publish"
    apply plugin: "idea"
    apply plugin: "eclipse"

    idea {
        module {
            outputDir file('build/classes/main')
            testOutputDir file('build/classes/test')
        }
    }

    if (project.convention.findPlugin(JavaPluginConvention)) {
        // Change the output directory for the main and test source sets back to the old path
        sourceSets.main.java.outputDir = new File(buildDir, "classes/main")
        sourceSets.test.java.outputDir = new File(buildDir, "classes/test")
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    group = "net.syscon.elite"
    version = "1.0.10"

    checkstyle {
        configFile = new File(rootDir, "syscon-checkstyle.xml")
    }

    dependencies {
        compile("org.apache.commons:commons-lang3:3.5")
        compile ("commons-io:commons-io:2.5")
        compile("com.google.code.findbugs:jsr305:3.0.1")
    }

    install.repositories.mavenInstaller.pom.whenConfigured { generatedPom ->
        generatedPom.project {
            name = project.name
            description = project.description
            url "http://www.syscon.net"
            organization { name "Syscon Justice Systems"; url "http://www.syscon.net" }
            developers {
                developer {
                    id "syscon-elite-team"
                    name "Syscon Elite Team"
                    organization  "Syscon Justice Systems"
                    organizationUrl "http://www.syscon.net"
                }
            }
        }
    }

    def repositoryType = project.version.endsWith('-SNAPSHOT')? "snapshot": "release"

    publishing {

        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        repositories {
            maven {
                credentials {
                    username = "${artifactory_username}"
                    password = "${artifactory_password}"
                }

                url "${artifactory_url}/libs-${repositoryType}-local"
            }
        }
    }

    task assembleSandbox {
        dependsOn([":mobile-api:htmlGen", "assemble"])

        doLast {
            def staticDir = file("${rootDir}/mobile-web/src/main/resources/static")

            if (!staticDir.exists()) {
                staticDir.mkdirs()
            }

            copy {
                from ("${rootDir}/mobile-api/raml") { include "api.html" }
                into (staticDir.absolutePath)
                rename { String fileName -> "index.html" }
            }
        }
    }
}
