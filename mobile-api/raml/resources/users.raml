/me/locations:
  (javaOperationName): getMyLocations
  description: Returns list of locations associated with current user.
  type: { readOnlyCollection: { type: Location, description: List of locations accessible to current user. } }
  
/{username}:
  (javaOperationName): getUserDetails
  type: { readOnlyItem: { type: UserDetail,  description: User detail. } }
  uriParameters:
    username:
      description: The username of the user.

/staff/{staffId}:
  (javaOperationName): getStaffDetail
  type: { readOnlyItem: { type: StaffDetail, description: Staff detail. } }
  uriParameters:
    staffId:
      (javaType): Long
      description: The staff id of the staff member.

/me:
  (javaOperationName): getMyUserInformation
  type: { readOnlyItem: { type: UserDetail, description: Current user detail. } }

/me/bookingAssignments:
  (javaOperationName): getMyAssignments
  description: Offender Assignments for this logged in user
  type: { readOnlyCollectionPaged: { type: OffenderBooking, description: List of offender bookings assigned to current user. } }

/me/roles:
  (javaOperationName): getMyRoles
  description: Get the logged in users roles
  type: { readOnlyCollection: { type: UserRole, description: List of roles for current user. } }

/me/caseLoads:
  (javaOperationName): getMyCaseLoads
  description: Returns the list of caseloads associated to the user
  type: { readOnlyCollection: { type: CaseLoad, description: List of caseloads accessible to current user. } }
  
/me/caseNoteTypes:
  (javaOperationName): getMyCaseNoteTypes
  type: { readOnlyCollection: { type: ReferenceCode, description: List of all case note types (with sub-types) accessible to current user (and based on working caseload). } }
  is: [
    sortable: {fieldsList : "code, activeFlag, description"},
  ]

/me/activeCaseLoad:
  (javaOperationName): updateMyActiveCaseLoad
  description: The active caseload associated to the user
  put:
    description: Update working caseload for current user.
    body:
      application/json:
        type: CaseLoad
    responses:
      401:
        body:
          application/json:
            type: ErrorResponse
            description: Invalid username or password
            example:  !include ../examples/ouput/401.sample.json
      403:
        body:
          application/json:
            type: ErrorResponse
            description: the user does not have permission to view the caseload.
            example:  !include ../examples/ouput/403.sample.json

/login:
  (javaOperationName): login
  post:
    securedBy: [basic]
    description: Authenticate user (with username and password).
    body:
      application/json:
        type: AuthLogin
        example: !include ../examples/input/login-auth.sample.json
    headers:
      Authorization:
        description: Used for Basic authentication
        required: false
        example: Basic aXRhZ191c2VyOml0NGdfdXMzcg==
    responses:
      201:
        description: If the login has been completed with success. The token object is returned including the status.
        body:
          application/json:
            type: Token
            example: !include ../examples/output/login-success.sample.json
        headers:
          Authorization:
            description: Generated token
            required: true
            example: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJpdGFnX3VzZXIiLCJhdWRpZW5jZSI6InVua25vd24iLCJjcmVhdGVkIjoxNDkyMTIwOTE1MDgzLCJleHAiOjE0OTIxMjE5MTV9.9gX_NzwtD2gHPZ9PJwClHuLxEohZBlKaeGWYJBL2nY1ydjlT7PQ2xjsWPsDusebpSozdbUCnm8H3fpKE7yWRZg

      401:
        body:
          application/json:
            type: ErrorResponse
            description: Invalid username or password
            example:  !include ../examples/ouput/401.sample.json

/token:
  (javaOperationName): tokenRefresh
  post:
    description: Refresh authentication token.
    headers:
      Authorization:
        description: Current Token
        required: true
        example: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJpdGFnX3VzZXIiLCJhdWRpZW5jZSI6InVua25vd24iLCJjcmVhdGVkIjoxNDkyMTIwOTE1MDgzLCJleHAiOjE0OTIxMjE5MTV9.9gX_NzwtD2gHPZ9PJwClHuLxEohZBlKaeGWYJBL2nY1ydjlT7PQ2xjsWPsDusebpSozdbUCnm8H3fpKE7yWRZg
    responses:
      201:
        description: If the login has been completed with success. The token object is returned including the status.
        body:
          application/json:
            type: Token
            example: !include ../examples/output/login-success.sample.json
        headers:
          Authorization:
            description: Generated token
            required: true
            example: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJpdGFnX3VzZXIiLCJhdWRpZW5jZSI6InVua25vd24iLCJjcmVhdGVkIjoxNDkyMTIwOTE1MDgzLCJleHAiOjE0OTIxMjE5MTV9.9gX_NzwtD2gHPZ9PJwClHuLxEohZBlKaeGWYJBL2nY1ydjlT7PQ2xjsWPsDusebpSozdbUCnm8H3fpKE7yWRZg
      401:
        body:
          application/json:
            type: ErrorResponse
            description: Invalid Token
            example:  !include ../examples/ouput/401.sample.json