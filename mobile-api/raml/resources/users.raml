/{username}:
  description: Retrieve details for user having specified username.
  type: { get-item: { schema: userDetails }}
  uriParameters:
    username:
      description: The username of the user.

/staff/{staffId}:
  description: Retrieve basic personal details for staff member having specified staff id.
  type: { get-item: { schema: staffDetails }}
  uriParameters:
    staffId:
      description: The staff id of the staff member.

/me:
  description: Details of the current logged user
  type: { get-item: { schema: userDetails } }

/me/bookingAssignments:
  description: Offender Assignments for this logged in user
  type: { get-collection: { collectionSchema: inmateSummaries } }
  is: [
    pageable
  ]

/me/caseLoads:
  description: Returns the list of caseloads associated to the user
  type: { get-collection: { collectionSchema: caseLoads } }
  is: [
    pageable
  ]
  
/me/caseNoteTypes:
  description: Returns the list of case Note types associated to the user
  type: { get-collection: { collectionSchema: caseNoteTypes } }
  is: [
    searchable: {fieldsList : "code, type"},
    orderable: {fieldsList : "code, type"},
    pageable
  ] 
  
/me/caseNoteTypes/{typeCode}:
  description: Returns the list of case Note types associated to the user
  type: { get-collection: { collectionSchema: caseNoteSubTypes } }
  is: [
    searchable: {fieldsList : "code, type"},
    orderable: {fieldsList : "code, type"},
    pageable
  ] 

/me/activeCaseLoad:
  description: The active caseload associated to the user
  type: { get-item: { schema: caseLoad } }

  put:
    description: Set the active caseload associated to the user.
    body:
      application/json:
        schema: caseLoad
    responses:
      200:
        description: The user's active caseload has been updated.
      401:
        description: Invalid username or password
        body:
          application/json:
            schema: httpStatus
            example: !include ../examples/output/401.sample.json
      403:
        description: the user does not have permission to view the caseload.
        body:
          application/json:
            schema: httpStatus
            example: !include ../examples/output/403.sample.json

/login:
  post:
    securedBy: [basic]
    description: Login using Username and Password
    body:
      application/json:
        schema: authLogin
        example: !include ../examples/input/login-auth.sample.json
    headers:
      Authorization:
        description: Used for Basic authentication
        required: false
        example: Basic aXRhZ191c2VyOml0NGdfdXMzcg==
    responses:
      201:
        description: If the login has been completed with success. The token object is returned including the status.
        body:
          application/json:
            schema: token
            example: !include ../examples/output/login-success.sample.json
        headers:
          Authorization:
            description: Generated token
            required: true
            example: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJpdGFnX3VzZXIiLCJhdWRpZW5jZSI6InVua25vd24iLCJjcmVhdGVkIjoxNDkyMTIwOTE1MDgzLCJleHAiOjE0OTIxMjE5MTV9.9gX_NzwtD2gHPZ9PJwClHuLxEohZBlKaeGWYJBL2nY1ydjlT7PQ2xjsWPsDusebpSozdbUCnm8H3fpKE7yWRZg

      401:
        description: Invalid username or password
        body:
          application/json:
            schema: httpStatus
            example: !include ../examples/output/401.sample.json

/token:
  post:
    description: Renew the JWT to keep as a authenticated user
    headers:
      Authorization:
        description: Current Token
        required: true
        example: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJpdGFnX3VzZXIiLCJhdWRpZW5jZSI6InVua25vd24iLCJjcmVhdGVkIjoxNDkyMTIwOTE1MDgzLCJleHAiOjE0OTIxMjE5MTV9.9gX_NzwtD2gHPZ9PJwClHuLxEohZBlKaeGWYJBL2nY1ydjlT7PQ2xjsWPsDusebpSozdbUCnm8H3fpKE7yWRZg
    responses:
      201:
        description: If the login has been completed with success. The token object is returned including the status.
        body:
          application/json:
            schema: token
            example: !include ../examples/output/login-success.sample.json
        headers:
          Authorization:
            description: Generated token
            required: true
            example: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJpdGFnX3VzZXIiLCJhdWRpZW5jZSI6InVua25vd24iLCJjcmVhdGVkIjoxNDkyMTIwOTE1MDgzLCJleHAiOjE0OTIxMjE5MTV9.9gX_NzwtD2gHPZ9PJwClHuLxEohZBlKaeGWYJBL2nY1ydjlT7PQ2xjsWPsDusebpSozdbUCnm8H3fpKE7yWRZg
      401:
        description: Invalid Token
        body:
          application/json:
            schema: httpStatus
            example: !include ../examples/output/401.sample.json
