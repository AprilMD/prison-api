/{agencyId}/offenders/unallocated:
  (javaOperationName): getUnallocatedOffenders
  type: { readOnlyCollectionPaged: { type: OffenderSummary, description: All unallocated offenders in specified agency. } }
  uriParameters:
    agencyId:
      type: string
      description: The agency (prison) identifier.
      example: LEI
  is: [
    sortable: {fieldsList: "firstName, lastName"}
  ]

/{agencyId}/allocations:
  (javaOperationName): getAllocations
  type: { readOnlyCollectionPaged: { type: KeyWorkerAllocationDetail, description: Allocations in specified agency. } }
  uriParameters:
    agencyId:
      type: string
      description: The agency (prison) identifier.
      example: BWI
  get:
    queryParameters:
      allocationType?:
        type: string
        description: Optional filter by type of allocation. A for auto allocations, M for manual allocations.
        example: A
      fromDate?:
        type: string
        description: Returned allocations must have been assigned on or after this date (in YYYY-MM-DD format).
        example: 2017-09-22
      toDate?:
        type: string
        description: Returned allocations must have been assigned on or before this date (in YYYY-MM-DD format).
        default: today's date
        example: 2017-10-22
  is: [
      sortable: {fieldsList: "firstName, lastName, assigned"}
  ]

/allocate:
  (javaOperationName): allocate
  post:
    description: Process manual allocation of an offender to a Key worker.
    body:
      application/json:
        type: NewAllocation
        description: New allocation details.
    responses:
      201:
        description: The allocation has been created.

/{agencyId}/available:
  (javaOperationName): getAvailableKeyworkers
  type: { readOnlyCollection: { type: Keyworker, description: Key workers available for allocation at specified agency. } }
  uriParameters:
    agencyId:
      type: string
      description: The agency (prison) identifier.
      example: MDI

/{staffId}:
  (javaOperationName): getKeyworkerDetails
  type: {readOnlyItem: {type: Keyworker, description: Key worker details. }}
  uriParameters:
    staffId:
      (javaType): Long
      description: The key worker staff id

/{agencyId}/allocate/start:
  (javaOperationName): autoAllocate
  post:
    description: Initiate auto-allocation process for specified agency.
    responses:
      200:
        description: Request to initiate auto-allocation process has been successfully processed.
                     (NOT YET IMPLEMENTED - Use returned process id to monitor process execution and outcome.)
                     Note that until asynchronous processing is implemented, this request will execute synchronously
                     and return total number of allocations processed.)
        body:
          application/json:
            type: string
      404:
        description: Agency id provided is not valid or is not accessible to user.
        body:
          application/json:
            type: ErrorResponse
            example:  !include ../examples/ouput/404.sample.json
      409:
        description: Auto-allocation processing not able to proceed or halted due to state of dependent resources.
        body:
          application/json:
            type: ErrorResponse
            example:  !include ../examples/ouput/409.sample.json
      500:
        body:
          application/json:
            type: ErrorResponse
            description: Unrecoverable error occurred whilst processing request.
            example: !include ../examples/ouput/500.sample.json
  uriParameters:
    agencyId:
      type: string
      description: The agency (prison) identifier.
      example: MDI