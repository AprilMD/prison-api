description:  The collection of inmates within the system.
type: { get-collection: { collectionSchema: inmateSummaries } }
is: [
  searchable,
  orderable: {fieldsList : "inmateId, bookingId, offenderId, firstName, lastName, alertCodes, agencyId, currentLocationId, or assignedLivingUnitId"},
  pageable,
  secured
]

/{bookingId}:
  description: The details specific to the specified inmate.
  type: { get-item: { schema: inmateDetails }}
  is: [ secured ]

/{bookingId}/casenotes:
  description: The collection of case notes associated to the booking.
  type: { get-collection: { collectionSchema: casenotes } }
  is: [
    searchable,
    orderable: {fieldsList : "creationDateTime, type, subType, source"},
    pageable,
    secured
  ]

  post:
    description: Entry of new case note under a booking.
    body:
      application/json:
        schema: casenote
    is: [ secured ]
    responses:
      201:
        description: The Case Note has been recorded. The updated object is returned including the status.
        body:
          application/json:
            schema: casenote
      400:
        body:
          application/json:
            schema: httpStatus
            example: !include ../examples/output/400.sample.json
      404:
        description: The error will define after seeing implimentation.
        body:
          application/json:
              schema: httpStatus
              example:  !include ../examples/output/404.sample.json
      409:
        description: The case note has already been recorded under the booking. The current unmodified object (including status) is returned.
        body:
          application/json:
            schema: casenote
      500:
        body:
          application/json:
            schema: httpStatus
            example: !include ../examples/output/500.sample.json

/{bookingId}/casenotes/{caseNoteId}:
  description: The specific case note of a booking.
  type: { get-item: { schema: casenote } }
  is: [ secured ]

  put:
    description: Update specific case note under a booking.
    is: [ secured ]
    body:
      application/json:
        schema: casenote
    responses:
      201:
        description: The Case Note has been recorded. The updated object is returned including the status.
        body:
          application/json:
            schema: casenote
      400:
        body:
          application/json:
            schema: httpStatus
            example: !include ../examples/output/400.sample.json
      404:
        description: The error will define after seeing implimentation.
        body:
          application/json:
              schema: httpStatus
              example:  !include ../examples/output/404.sample.json
      409:
        description: The case note has already been recorded under the booking. The current unmodified object (including status) is returned.
        body:
          application/json:
            schema: casenote
      500:
        body:
          application/json:
            schema: httpStatus
            example: !include ../examples/output/500.sample.json

/{bookingId}/alerts:
  description: The collection of alerts associated to the booking.
  type: { get-collection: { collectionSchema: alerts } }
  is: [
    searchable,
    orderable: {fieldsList : "creationDateTime, type, subType, source"},
    pageable,
    secured
  ]

/{bookingId}/alerts/{alertId}:
  description: A specific alert associated to the booking.
  type: { get-item: { schema: alert } }
  is: [ secured ]
