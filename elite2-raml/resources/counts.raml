/{countId}:
  description: Details about the specified count.
  type: { get-item: { schema: automatedCount }}

/{countId}/locations/{locationId}:
  description: Details about the count at the specified location.

  get:
    responses:
      200:
        description: OK
        body:
          application/json:
            schema: locationCount
      400:
        body:
          application/json:
            schema: httpStatus
            example: !include ../examples/output/400.sample.json
      404:
        body:
          application/json:
              schema: httpStatus
              example:  !include ../examples/output/404.sample.json
      500:
        body:
          application/json:
            schema: httpStatus
            example: !include ../examples/output/500.sample.json
  post:
    description: Records the initial count performed at the location.
    body:
      application/json:
        schema: locationCount
    responses:
      201:
        description: The count has been recorded. The updated object is returned including the status.
        body:
          application/json:
            schema: locationCount
      400:
        body:
          application/json:
            schema: httpStatus
            example: !include ../examples/output/400.sample.json
      404:
        description: The location is no longer associated with the count or the count is no longer active.
        body:
          application/json:
              schema: httpStatus
              example:  !include ../examples/output/404.sample.json
      409:
        description: The initial count has already been recorded for the location. The current unmodified object (including status) is returned.
        body:
          application/json:
            schema: locationCount
      500:
        body:
          application/json:
            schema: httpStatus
            example: !include ../examples/output/500.sample.json
  put:
    description: Records the recount performed at the location.
    body:
      application/json:
          schema: locationCount
    responses:
      201:
        description: The count has been recorded. The updated object is returned including the status.
        body:
          application/json:
            schema: locationCount
      400:
        body:
          application/json:
            schema: httpStatus
            example: !include ../examples/output/400.sample.json
      404:
        description: The location is no longer associated with the count or the count is no longer active.
        body:
          application/json:
              schema: httpStatus
              example:  !include ../examples/output/404.sample.json
      409:
        description: The initial count has already been recorded for the location. The current unmodified object (including status) is returned.
        body:
          application/json:
            schema: locationCount
      500:
        body:
          application/json:
            schema: httpStatus
            example: !include ../examples/output/500.sample.json
