CREATE OR REPLACE TRIGGER "OIC_HEARING_RESULTS_TA"
BEFORE INSERT OR UPDATE OR DELETE ON OIC_HEARING_RESULTS
REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
    DECLARE
        l_scn NUMBER;
        l_tid VARCHAR2(32);
    BEGIN
        /*
        ============================================================
           Generated by 2.3  Date Generation 10-NOV-2008
        ============================================================
          MODIFICATION HISTORY
           Person       Date      version      Comments
        -----------  --------- -----------  -------------------------------
            GJC      05/03/2007  2.3          Allow application setting some columns
            GJC      23/10/2006  2.2          Audit DELETE statements
           David Ng  18/04/2006  2.0.1        Audit column trigger
        */
        IF INSERTING THEN
            :NEW.create_datetime := NVL(:NEW.create_datetime,systimestamp);
            :NEW.create_user_id  := NVL(:NEW.create_user_id,user);
        ELSIF UPDATING THEN
            :NEW.modify_datetime := systimestamp;
            :NEW.modify_user_id  := user;
        END IF ;
        IF NOT DELETING
        THEN
            :NEW.Audit_timestamp               := systimestamp ;
            :NEW.Audit_User_ID                 := SYS_CONTEXT('NOMIS', 'AUDIT_USER_ID', 30) ;
            :NEW.Audit_Module_Name             := SYS_CONTEXT('NOMIS', 'AUDIT_MODULE_NAME', 65) ;
            :NEW.Audit_Client_User_ID          := SYS_CONTEXT('NOMIS', 'AUDIT_CLIENT_USER_ID', 64) ;
            :NEW.Audit_Client_IP_Address       := SYS_CONTEXT('NOMIS', 'AUDIT_CLIENT_IP_ADDRESS', 39) ;
            :NEW.Audit_Client_Workstation_Name := SYS_CONTEXT('NOMIS', 'AUDIT_CLIENT_WORKSTATION_NAME', 64) ;
            :NEW.Audit_Additional_Info         := SYS_CONTEXT('NOMIS', 'AUDIT_ADDITIONAL_INFO', 256) ;
        ELSE
            l_tid := DBMS_TRANSACTION.local_transaction_id(create_transaction=>FALSE);
            SELECT current_scn
            INTO l_scn
            FROM   v$database;
            INSERT INTO OMS_DELETED_ROWS
            (
                table_name,
                xid,
                scn,
                audit_timestamp,
                audit_user_id,
                audit_module_name,
                audit_client_user_id,
                audit_client_ip_address,
                audit_client_workstation_name,
                audit_additional_info
            )
            VALUES
                (
                    'OIC_HEARING_RESULTS',
                    converttoxid(l_tid),
                    l_scn,
                    systimestamp,
                    SYS_CONTEXT('NOMIS', 'AUDIT_USER_ID', 30),
                    SYS_CONTEXT('NOMIS', 'AUDIT_MODULE_NAME', 65),
                    SYS_CONTEXT('NOMIS', 'AUDIT_CLIENT_USER_ID', 64),
                    SYS_CONTEXT('NOMIS', 'AUDIT_CLIENT_IP_ADDRESS', 39),
                    SYS_CONTEXT('NOMIS', 'AUDIT_CLIENT_WORKSTATION_NAME', 64),
                    SYS_CONTEXT('NOMIS', 'AUDIT_ADDITIONAL_INFO', 256)
                );
        END IF;
    END ;

/
ALTER TRIGGER "OIC_HEARING_RESULTS_TA" ENABLE;


CREATE OR REPLACE TRIGGER "OIC_HEAR_RES_XTAG_EVENTS"
AFTER
INSERT OR UPDATE OR DELETE
    ON Oic_Hearing_Results
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
    DECLARE
        /******************************************************************************
           NAME:    Oic_Hear_Res_Xtag_Events
           PURPOSE: This trigger is part of the event monitoring system, please refrain
                    from modifying it on your own.

           REVISIONS:
           Ver        Date        Author           Description
           ---------  ----------  ---------------  ------------------------------------
           1.3		  19/08/2008  Paul M           QC#9847. Also fire on delete
           1.2		  21/07/2008  Laurence         QC#9756. Trigger not to fire during merge.
          1.1        21/07/2006  Laurence         Now passes nomis timestamp in trigger.
           1.0        11/06/2006  Laurence         Created this trigger.
        ******************************************************************************/
    BEGIN
        -- Trigger not to fire during merge.
        IF SYS_CONTEXT('NOMIS','AUDIT_MODULE_NAME',50) = 'MERGE'
        THEN
            RETURN;
        END IF;

        IF INSERTING
        THEN
            --
            -- IIS A2 event
            --
            xtag.Xtag_Notify
            ( v_event_type	=> 'A2_RESULT',
              v_params		=> xtag.xtag_notification_params
              ( xtag.xtag_params('p_oic_hearing_id', :NEW.oic_hearing_id),
                xtag.xtag_params('p_result_seq', :NEW.result_seq),
                xtag.xtag_params('p_agency_incident_id', :NEW.agency_incident_id),
                xtag.xtag_params('p_charge_seq', :NEW.charge_seq),
                xtag.xtag_params('p_nomis_timestamp', TO_CHAR(:NEW.create_datetime, 'YYYYMMDDHH24MISS.FF9'))
              )
            );

        ELSIF UPDATING
            THEN
                IF Is_Vch_Changed(:NEW.plea_finding_code, :OLD.plea_finding_code) OR
                   Is_Vch_Changed(:NEW.finding_code, :OLD.finding_code)
                THEN
                    --
                    -- IIS A2 event
                    --
                    xtag.Xtag_Notify
                    ( v_event_type	=> 'A2_RESULT',
                      v_params		=> xtag.xtag_notification_params
                      ( xtag.xtag_params('p_oic_hearing_id', :NEW.oic_hearing_id),
                        xtag.xtag_params('p_result_seq', :NEW.result_seq),
                        xtag.xtag_params('p_agency_incident_id', :NEW.agency_incident_id),
                        xtag.xtag_params('p_charge_seq', :NEW.charge_seq),
                        xtag.xtag_params('p_nomis_timestamp', TO_CHAR(:NEW.modify_datetime, 'YYYYMMDDHH24MISS.FF9'))
                      )
                    );
                END IF;
        ELSIF DELETING THEN
            --
            -- IIS A2 event
            --
            xtag.Xtag_Notify
            ( v_event_type	=> 'A2_RESULT',
              v_params		=> xtag.xtag_notification_params
              ( xtag.xtag_params('p_oic_hearing_id', :OLD.oic_hearing_id),
                xtag.xtag_params('p_result_seq', :OLD.result_seq),
                xtag.xtag_params('p_agency_incident_id', :OLD.agency_incident_id),
                xtag.xtag_params('p_charge_seq', :OLD.charge_seq),
                xtag.xtag_params('p_oic_offence_id', :OLD.oic_offence_id),
                xtag.xtag_params('p_plea_finding_code', :OLD.plea_finding_code),
                xtag.xtag_params('p_finding_code', :OLD.finding_code),
                xtag.xtag_params('p_delete_flag', 'Y'),
                xtag.xtag_params('p_nomis_timestamp', TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS.FF9'))
              )
            );
        END IF;
    END;
/
ALTER TRIGGER "OIC_HEAR_RES_XTAG_EVENTS" ENABLE;

