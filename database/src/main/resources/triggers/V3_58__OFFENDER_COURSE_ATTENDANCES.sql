
CREATE OR REPLACE TRIGGER "OFFENDER_COURSE_ATTENDANCES_T1"
BEFORE
UPDATE
  ON OFFENDER_COURSE_ATTENDANCES
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
  BEGIN
    -- Lines added by GJC 21/12/2007 to check if the trigger code should be executed or not
    IF SYS_CONTEXT('NOMIS', 'AUDIT_MODULE_NAME', 50) = 'MERGE'
    THEN
      RETURN;
    END IF;
    -- Change added by GJC 21/12/2007 to check if the trigger code should be executed or not
    /*
============================================================
   Version 2.2  Date Generation 21-DEC-2007
============================================================
  MODIFICATION HISTORY
   Person    Date       version    Comments
   Graham    21/12/2007  2.2       #7775: Code added for Merge, fix versioning
   Rajshree  09/07/2007  2.1       #7307: Modify the if conditions to set the event status accordingly.
   David Ng  07/07/2006  2.0       Syn Event_Status and Event_Outcome

*/
    ---Rajshree 09/07/2007 #7240 ,Added code to fix the status
    -- when updated to DEL ,should not change to SCH again.

    IF :NEW.event_status = 'DEL'
    THEN
      RETURN;
    END IF;

    IF (:NEW.event_outcome IS NOT NULL)
    THEN
      IF (:OLD.event_outcome IS NULL AND :NEW.event_status IN ('SCH', 'EXP')
      )
      THEN
        :NEW.event_status := 'COMP';
      END IF;
    ELSE
      IF (:NEW.event_status NOT IN ('CANC', 'COMP')) --Rajshree #7240 Added 'COMP'.
      THEN
        IF (:NEW.event_date <= TRUNC(SYSDATE) - 1)
        THEN
          :NEW.event_status := 'EXP';
        ELSE
          :NEW.event_status := 'SCH';
        END IF;
      END IF;
    END IF;
  END;
/



CREATE OR REPLACE TRIGGER "OFFENDER_COURSE_ATTNDNS_TWF"
AFTER UPDATE OR INSERT
  ON OFFENDER_COURSE_ATTENDANCES
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
  DECLARE
    lv_xml XMLTYPE;
  BEGIN
    -- Lines added by GJC 21/12/2007 to check if the trigger code should be executed or not
    IF SYS_CONTEXT('NOMIS', 'AUDIT_MODULE_NAME', 50) = 'MERGE'
    THEN
      RETURN;
    END IF;
    -- Change added by GJC 21/12/2007 to check if the trigger code should be executed or not
    /*===================================================================
Version Number = 2.5 Date Modified = 21-DEC-2007
====================================================================*/
    /* MODIFICATION HISTORY
   Person      Date           Version       Comments
   ------------------------------------------------------------------
   Graham      21-Dec-2007    2.5           #7775: Code added for Merge, fix versioning
   GJC         25-Jul-2006    2.4           Defect 3464
   GJC         25-Jul-2006    2.3           Defect 3464
   GJC         24-Jul-2006    2.2           Defect 3464
   GJC         04-Jul-2006    2.1           Minor bug
   GJC         12-Jun-2006    2.0           Created.
*/

    IF ((UPDATING AND NVL(:NEW.event_outcome, '***') IN ('FTA', 'FTC') AND
         NVL(:OLD.event_outcome, '***') NOT IN ('FTA', 'FTC'))
        OR (INSERTING AND NVL(:NEW.event_outcome, '***') IN ('FTA', 'FTC')))
       AND NVL(:NEW.EVENT_TYPE, '***') IN ('DRR', 'SA', 'ACP', 'UW')
    THEN
      lv_xml := Tag_Wfmsg.create_xml;

      Tag_Wfmsg.append('program_profile_id', :NEW.OFF_PRGREF_ID, lv_xml);
      Tag_Wfmsg.append('event_type', :NEW.EVENT_TYPE, lv_xml);

      tag_workflow.create_workflow(p_offender_book_id => :NEW.OFFENDER_BOOK_ID,
                                   p_trigger_name => 'FIRST_FTA',
                                   p_key => TO_CHAR(:NEW.event_id),
                                   p_params => lv_xml);
    END IF;

    --@@@ GJC Added for defect 3464

    IF UPDATING AND NVL(:OLD.event_outcome, '***') IN ('FTA', 'FTC')
       AND NVL(:NEW.event_outcome, '***') NOT IN ('FTA', 'FTC')
       AND NVL(:NEW.EVENT_TYPE, '***') IN ('DRR', 'SA', 'ACP', 'UW')
    THEN

      lv_xml := Tag_Wfmsg.create_xml;

      Tag_Wfmsg.append('event_id', :NEW.EVENT_ID, lv_xml);

      tag_workflow.complete_workflow(p_trigger_name => 'FIRST_FTA',
                                     p_key => TO_CHAR(:NEW.event_id),
                                     p_params => lv_xml);
    END IF;

    --@@@ GJC End of change for defect 3464

    EXCEPTION
    WHEN OTHERS
    THEN
    Tag_Error.handle();
  END;
/



CREATE OR REPLACE TRIGGER "OFFENDER_COURSE_ATTENDANCES_TA"
BEFORE INSERT OR UPDATE OR DELETE ON OFFENDER_COURSE_ATTENDANCES
REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
  DECLARE
    l_scn NUMBER;
    l_tid VARCHAR2(32);
  BEGIN
    /*
============================================================
   Generated by 2.3  Date Generation 20-SEP-2011
============================================================
  MODIFICATION HISTORY
   Person       Date      version      Comments
-----------  --------- -----------  -------------------------------
    GJC      05/03/2007  2.3          Allow application setting some columns
    GJC      23/10/2006  2.2          Audit DELETE statements
   David Ng  18/04/2006  2.0.1        Audit column trigger
*/
    IF INSERTING
    THEN
      :NEW.create_datetime := NVL(:NEW.create_datetime, systimestamp);
      :NEW.create_user_id := NVL(:NEW.create_user_id, user);
    ELSIF UPDATING
      THEN
        :NEW.modify_datetime := systimestamp;
        :NEW.modify_user_id := user;
    END IF;
    IF NOT DELETING
    THEN
      :NEW.Audit_timestamp := systimestamp;
      :NEW.Audit_User_ID := SYS_CONTEXT('NOMIS', 'AUDIT_USER_ID', 30);
      :NEW.Audit_Module_Name := SYS_CONTEXT('NOMIS', 'AUDIT_MODULE_NAME', 65);
      :NEW.Audit_Client_User_ID := SYS_CONTEXT('NOMIS', 'AUDIT_CLIENT_USER_ID', 64);
      :NEW.Audit_Client_IP_Address := SYS_CONTEXT('NOMIS', 'AUDIT_CLIENT_IP_ADDRESS', 39);
      :NEW.Audit_Client_Workstation_Name := SYS_CONTEXT('NOMIS', 'AUDIT_CLIENT_WORKSTATION_NAME', 64);
      :NEW.Audit_Additional_Info := SYS_CONTEXT('NOMIS', 'AUDIT_ADDITIONAL_INFO', 256);
    ELSE
      l_tid := DBMS_TRANSACTION.local_transaction_id(create_transaction=>FALSE);
      SELECT current_scn
      INTO l_scn
      FROM v$database;
      INSERT INTO OMS_DELETED_ROWS
      (
        table_name,
        xid,
        scn,
        audit_timestamp,
        audit_user_id,
        audit_module_name,
        audit_client_user_id,
        audit_client_ip_address,
        audit_client_workstation_name,
        audit_additional_info
      )
      VALUES
        (
          'OFFENDER_COURSE_ATTENDANCES',
          converttoxid(l_tid),
          l_scn,
          systimestamp,
          SYS_CONTEXT('NOMIS', 'AUDIT_USER_ID', 30),
          SYS_CONTEXT('NOMIS', 'AUDIT_MODULE_NAME', 65),
          SYS_CONTEXT('NOMIS', 'AUDIT_CLIENT_USER_ID', 64),
          SYS_CONTEXT('NOMIS', 'AUDIT_CLIENT_IP_ADDRESS', 39),
          SYS_CONTEXT('NOMIS', 'AUDIT_CLIENT_WORKSTATION_NAME', 64),
          SYS_CONTEXT('NOMIS', 'AUDIT_ADDITIONAL_INFO', 256)
        );
    END IF;
  END;
/


